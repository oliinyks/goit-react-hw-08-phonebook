{"version":3,"file":"static/js/58.30870a78.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/CommonComponents/Button/Button.module.css?02ca","components/CommonComponents/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/Form/Form.module.css?33b7","components/ContactsComponents/Form/Form.jsx","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/OneContact/OneContact.module.css?8060","components/ContactsComponents/OneContact/OneContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/ContactList/ContactList.module.css?6b86","components/ContactsComponents/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/Filter/Filter.module.css?febc","components/ContactsComponents/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DKOwf\"};","import css from './Button.module.css';\n\nexport default function Button ({children}) {\n\treturn <button className={css.button}>{children}</button>;\n };","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Form_label__Hu0fD\",\"input\":\"Form_input__3M8A7\"};","import { useState } from 'react';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from 'redux/ContactSlice';\nimport Button from 'components/CommonComponents/Button'\nimport { nanoid } from 'nanoid';\nimport Notiflix from 'notiflix';\nimport css from './Form.module.css';\n\nexport default function Form() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contactsName = contacts.map(contact => contact.name);\n    const filterName = contactsName.some(\n      contactName => contactName.toLowerCase() === name.toLowerCase()\n    );\n    if (filterName) {\n      return Notiflix.Notify.failure(\n        'You already have a contact with that name'\n      );\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    createContact(newContact);\n    Notiflix.Notify.success('You have just created a new contact');\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor={nameInputId}>\n        Name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={name}\n        onChange={handleInputChange}\n        name=\"name\"\n        id={nameInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={css.label} htmlFor={numberInputId}>\n        Number\n      </label>\n      <input\n        className={css.input}\n        type=\"tel\"\n        value={number}\n        onChange={handleInputChange}\n        name=\"number\"\n        id={numberInputId}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Adding contact...' : 'Add contact'}\n      </Button>\n    </form>\n  );\n}\n","export const getStatusFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"OneContact_item__Y0Xsd\",\"button\":\"OneContact_button__i5HbT\"};","import React from 'react';\nimport Notiflix from 'notiflix';\nimport { useDeleteContactMutation } from 'redux/ContactSlice';\nimport css from './OneContact.module.css';\nimport { GiSandsOfTime } from 'react-icons/gi';\nimport { BsXCircle } from 'react-icons/bs';\n\nexport default function OneContact({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteContacts = contactId => {\n    deleteContact(contactId);\n    Notiflix.Notify.success('You have just deleted a contact');\n  };\n\n  return (\n    <li className={css.item} key={id}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n\t\t  className={css.button}\n        onClick={() => deleteContacts(id)}\n      >\n        {isDeleting ? <GiSandsOfTime/> :  <BsXCircle/>}\n      </button>\n    </li>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"ContactList_items__dBi8j\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/ContactSlice';\nimport { getStatusFilter } from 'redux/selectors';\nimport OneContact from '../OneContact';\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const filter = useSelector(getStatusFilter);\n  const { data: contacts = [], isFetching } = useFetchContactsQuery();\n\n  const contactsList = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {isFetching && <p>Loading...</p>}\n      <ul className={css.items}>\n        {contactsList().map(contact => (\n          <OneContact key={contact.id} {...contact} />\n        ))}\n      </ul>\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__GKAq6\",\"input\":\"Filter_input__1Oxp3\"};","import React from 'react';\nimport { getStatusFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/FilterSlice';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getStatusFilter);\n  const nameFilterId = nanoid();\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const event = e.currentTarget.value;\n    dispatch(setFilter(event));\n  };\n\n  return (\n    <>\n      <label className={css.label} htmlFor={nameFilterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        id={nameFilterId}\n        onChange={changeFilter}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__LxdN4\",\"subtitle\":\"Contacts_subtitle__YZry6\"};","import { useFetchContactsQuery } from 'redux/ContactSlice';\nimport Form from 'components/ContactsComponents/Form';\nimport ContactList from 'components/ContactsComponents/ContactList';\nimport Filter from 'components/ContactsComponents/Filter';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const { data: contacts = [], isLoading } = useFetchContactsQuery();\n\n  return (\n    <section>\n      <h1 className={css.title}>Your phonebook</h1>\n      <Form />\n      <h2 className={css.subtitle}>Contacts</h2>\n      {contacts.length > 0 ? (\n        <>\n          {isLoading && <p>Loading...</p>}\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p className={css.text}>You have no contacts</p>\n      )}\n    </section>\n  );\n}\n"],"names":["Button","children","className","css","Form","contacts","useFetchContactsQuery","data","useCreateContactMutation","createContact","isLoading","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleInputChange","event","target","value","reset","onSubmit","preventDefault","map","contact","some","contactName","toLowerCase","Notiflix","newContact","id","htmlFor","type","onChange","pattern","title","required","disabled","getStatusFilter","state","filter","OneContact","useDeleteContactMutation","deleteContact","isDeleting","onClick","ContactList","useSelector","isFetching","normalizedFilter","includes","contactsList","Filter","nameFilterId","dispatch","useDispatch","e","currentTarget","setFilter","Contacts","length"],"sourceRoot":""}