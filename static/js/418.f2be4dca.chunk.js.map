{"version":3,"file":"static/js/418.f2be4dca.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/Form/Form.module.css?33b7","components/ContactsComponents/Form/Form.jsx","redux/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/OneContact/OneContact.module.css?8060","components/ContactsComponents/OneContact/OneContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/ContactList/ContactList.module.css?6b86","components/ContactsComponents/ContactList/ContactList.jsx","redux/FilterSlice.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/Filter/Filter.module.css?febc","components/ContactsComponents/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Form_box__JOGSh\",\"label\":\"Form_label__Hu0fD\",\"input\":\"Form_input__3M8A7\"};","import { useState } from 'react';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from 'redux/ContactSlice';\nimport Button from 'components/CommonComponents/Button'\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport css from './Form.module.css';\n\nexport default function Form() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contactsName = contacts.map(contact => contact.name);\n    const filterName = contactsName.some(\n      contactName => contactName.toLowerCase() === name.toLowerCase()\n    );\n    if (filterName) {\n      return toast.error(\n        'You already have a contact with that name'\n      );\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    createContact(newContact);\n    toast.success('You have just created a new contact');\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n\t<div className={css.box}>\n    <form onSubmit={handleSubmit} className={css.box}>\n      <label className={css.label} htmlFor={nameInputId}>\n        Name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={name}\n        onChange={handleInputChange}\n        name=\"name\"\n        id={nameInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label className={css.label} htmlFor={numberInputId}>\n        Number\n      </label>\n      <input\n        className={css.input}\n        type=\"tel\"\n        value={number}\n        onChange={handleInputChange}\n        name=\"number\"\n        id={numberInputId}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button type=\"submit\" disabled={isLoading}>\n        {isLoading ? 'Adding contact...' : 'Add contact'}\n      </Button>\n    </form>\n\t</div>\n  );\n}\n","export const getStatusFilter = state => state.filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"OneContact_item__Y0Xsd\",\"button\":\"OneContact_button__i5HbT\"};","import React from 'react';\nimport { toast } from 'react-toastify';\nimport { useDeleteContactMutation } from 'redux/ContactSlice';\nimport css from './OneContact.module.css';\nimport { GiSandsOfTime } from 'react-icons/gi';\nimport { BsXCircle } from 'react-icons/bs';\n\nexport default function OneContact({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const deleteContacts = contactId => {\n    deleteContact(contactId);\n    toast.success('You have just deleted a contact');\n  };\n\n  return (\n    <li className={css.item} key={id}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n\t\t  className={css.button}\n        onClick={() => deleteContacts(id)}\n      >\n        {isDeleting ? <GiSandsOfTime/> :  <BsXCircle/>}\n      </button>\n    </li>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"ContactList_items__dBi8j\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/ContactSlice';\nimport { getStatusFilter } from 'redux/selectors';\nimport OneContact from '../OneContact';\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const filter = useSelector(getStatusFilter);\n  const { data: contacts = [], isFetching } = useFetchContactsQuery();\n\n  const contactsList = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {isFetching && <p>Loading...</p>}\n      <ul className={css.items}>\n        {contactsList().map(contact => (\n          <OneContact key={contact.id} {...contact} />\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    setFilter: (_, { payload }) => payload,\n  },\n});\n\nexport const { setFilter } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__GKAq6\",\"input\":\"Filter_input__1Oxp3\"};","import React from 'react';\nimport { getStatusFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/FilterSlice';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n  const filter = useSelector(getStatusFilter);\n  const nameFilterId = nanoid();\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const event = e.currentTarget.value;\n    dispatch(setFilter(event));\n  };\n\n  return (\n    <>\n      <label className={css.label} htmlFor={nameFilterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        id={nameFilterId}\n        onChange={changeFilter}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__LxdN4\",\"subtitle\":\"Contacts_subtitle__YZry6\"};","import { useFetchContactsQuery } from 'redux/ContactSlice';\nimport Form from 'components/ContactsComponents/Form';\nimport ContactList from 'components/ContactsComponents/ContactList';\nimport Filter from 'components/ContactsComponents/Filter';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const { data: contacts = [], isLoading } = useFetchContactsQuery();\n\n  return (\n    <section>\n      <h1 className={css.title}>Your phonebook</h1>\n      <Form />\n      <h2 className={css.subtitle}>Contacts</h2>\n      {contacts.length > 0 ? (\n        <>\n          {isLoading && <p>Loading...</p>}\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p className={css.text}>You have no contacts</p>\n      )}\n    </section>\n  );\n}\n"],"names":["Form","contacts","useFetchContactsQuery","data","useCreateContactMutation","createContact","isLoading","useState","name","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleInputChange","event","target","value","reset","className","css","onSubmit","preventDefault","map","contact","some","contactName","toLowerCase","toast","newContact","id","htmlFor","type","onChange","pattern","title","required","Button","disabled","getStatusFilter","state","filter","OneContact","useDeleteContactMutation","deleteContact","isDeleting","onClick","ContactList","useSelector","isFetching","normalizedFilter","includes","contactsList","filterSlice","createSlice","initialState","reducers","setFilter","_","payload","actions","reducer","Filter","nameFilterId","dispatch","useDispatch","e","currentTarget","Contacts","length"],"sourceRoot":""}