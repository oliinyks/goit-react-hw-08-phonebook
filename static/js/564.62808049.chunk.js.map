{"version":3,"file":"static/js/564.62808049.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/CommonComponents/Button/Button.module.css?02ca","components/CommonComponents/Button/Button.jsx","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/Form/Form.module.css?33b7","components/ContactsComponents/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/OneContact/OneContact.module.css?8060","components/ContactsComponents/OneContact/OneContact.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/ContactList/ContactList.module.css?6b86","components/ContactsComponents/ContactList/ContactList.jsx","redux/FilterSlice.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsComponents/Filter/Filter.module.css?febc","components/ContactsComponents/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DKOwf\"};","import css from './Button.module.css';\n\nexport default function Button ({children}) {\n\treturn <button className={css.button}>{children}</button>;\n };","export const selectLoading = state => state.contacts.loading;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectAllContacts = state => state.contacts.items;","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Form_box__JOGSh\",\"label\":\"Form_label__Hu0fD\",\"input\":\"Form_input__3M8A7\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts, selectLoading } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport Button from 'components/CommonComponents/Button';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport css from './Form.module.css';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts  = useSelector(selectAllContacts);\n  const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contactsName = contacts.map(contact => contact.name);\n    const filterName = contactsName.some(\n      contactName => contactName.toLowerCase() === name.toLowerCase()\n    );\n    if (filterName) {\n      return toast.error('You already have a contact with that name');\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    toast.success('You have just created a new contact');\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.box}>\n      <form onSubmit={handleSubmit} className={css.box}>\n        <label className={css.label} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          className={css.input}\n          type=\"text\"\n          value={name}\n          onChange={handleInputChange}\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <label className={css.label} htmlFor={numberInputId}>\n          Number\n        </label>\n        <input\n          className={css.input}\n          type=\"tel\"\n          value={number}\n          onChange={handleInputChange}\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Adding contact...' : 'Add contact'}\n        </Button>\n      </form>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"OneContact_item__Y0Xsd\",\"button\":\"OneContact_button__i5HbT\"};","import React from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport {deleteContact} from 'redux/contacts/operations';\nimport css from './OneContact.module.css';\nimport { GiSandsOfTime } from 'react-icons/gi';\nimport { BsXCircle } from 'react-icons/bs';\n\nexport default function OneContact({ id, name, number }) {\n   const isLoading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  const deleteContacts = contactId => {\n\t dispatch(deleteContact(contactId));\n    toast.success('You have just deleted a contact');\n  };\n\n  return (\n    <li className={css.item} key={id}>\n      <p>\n        {name}: {number}\n      </p>\n      <button\n        type=\"button\"\n\t\t  className={css.button}\n        onClick={() => deleteContacts(id)}\n      >\n        {isLoading ? <GiSandsOfTime/> :  <BsXCircle/>}\n      </button>\n    </li>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"items\":\"ContactList_items__dBi8j\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAllContacts, selectLoading, selectFilter } from 'redux/contacts/selectors';\nimport OneContact from '../OneContact';\nimport css from './ContactList.module.css';\n\nexport default function ContactList() {\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectLoading);\n  const contacts  = useSelector(selectAllContacts);\n\n  const contactsList = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n      <ul className={css.items}>\n        {contactsList().map(contact => (\n          <OneContact key={contact.id} {...contact} />\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState: '',\n  reducers: {\n    setFilter: (_, { payload }) => payload,\n  },\n});\n\nexport const { setFilter } = filterSlice.actions;\nexport const filterReducer = filterSlice.reducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__GKAq6\",\"input\":\"Filter_input__1Oxp3\"};","import React from 'react';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/FilterSlice';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\n\nexport default function Filter() {\n\tconst filter = useSelector(selectFilter);\n  const nameFilterId = nanoid();\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    const event = e.currentTarget.value;\n    dispatch(setFilter(event));\n  };\n\n  return (\n    <>\n      <label className={css.label} htmlFor={nameFilterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        value={filter}\n        id={nameFilterId}\n        onChange={changeFilter}\n      />\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__LxdN4\",\"subtitle\":\"Contacts_subtitle__YZry6\"};","import { selectAllContacts, selectLoading } from 'redux/contacts/selectors';\nimport Form from 'components/ContactsComponents/Form';\nimport ContactList from 'components/ContactsComponents/ContactList';\nimport Filter from 'components/ContactsComponents/Filter';\nimport css from './Contacts.module.css';\nimport { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport {selectIsLoggedIn} from 'redux/auth/selectors';\n\nexport default function Contacts() {\n\tconst isLoading = useSelector(selectLoading);\n\tconst contacts  = useSelector(selectAllContacts) && [];\n  const isLoginSuccess = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  useEffect(()=> {\n\tif (!isLoginSuccess) {\n\t\tnavigate(\"/\", { replace: true });\n\t }\n  },[isLoginSuccess, navigate])\n\n  return (\n    <section>\n      <h1 className={css.title}>Your phonebook</h1>\n      <Form />\n      <h2 className={css.subtitle}>Contacts</h2>\n      {contacts.length > 0 ? (\n        <>\n          {isLoading && <p>Loading...</p>}\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p className={css.text}>You have no contacts</p>\n      )}\n    </section>\n  );\n}\n"],"names":["Button","children","className","css","selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","Form","useState","name","setName","number","setNumber","useSelector","isLoading","dispatch","useDispatch","nameInputId","nanoid","numberInputId","handleInputChange","event","target","value","reset","onSubmit","preventDefault","map","contact","some","contactName","toLowerCase","toast","newContact","addContact","htmlFor","type","onChange","id","pattern","title","required","disabled","OneContact","onClick","contactId","deleteContact","ContactList","normalizedFilter","includes","contactsList","filterSlice","createSlice","initialState","reducers","setFilter","_","payload","actions","reducer","Filter","nameFilterId","e","currentTarget","Contacts","isLoginSuccess","selectIsLoggedIn","navigate","useNavigate","useEffect","replace","length"],"sourceRoot":""}