{"version":3,"file":"static/js/905.41a8704d.chunk.js","mappings":"6KACA,MAAyB,uB,SCCV,SAASA,EAAT,GAA8B,IAAZC,EAAW,EAAXA,SAChC,OAAO,mBAAQC,UAAWC,EAAnB,SAAgCF,GACtC,C,oECHF,MAAsB,uBAAtB,EAAuD,2BAAvD,EAA0F,yBAA1F,EAA2H,yBAA3H,EAA4J,yBAA5J,EAAiM,6BAAjM,EAAqO,wBAArO,EAAsQ,0B,qECOvP,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACVC,EAAcC,EAAAA,EAAAA,WAEfC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAcxB,OACD,gBAAKR,UAAWC,EAAhB,UACG,kBAAMS,SAda,SAAAC,GACnBA,EAAEC,iBACJ,IAAMC,EAAOF,EAAEG,cAChBX,GAASY,EAAAA,EAAAA,IAAM,CACdC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAE9Bb,GACFQ,EAAKO,OAEL,EAI+BC,aAAa,MAAMrB,UAAWC,EAA5D,WACF,eAAID,UAAWC,EAAf,oBACI,kBAAOD,UAAWC,EAAWqB,QAASf,EAAtC,oBAGA,kBACEP,UAAWC,EACXsB,KAAK,QACLC,KAAK,QACLC,GAAIlB,EACJmB,UAAQ,KAGV,kBAAO1B,UAAWC,EAAWqB,QAASb,EAAtC,uBAGA,kBACET,UAAWC,EACXsB,KAAK,WACLC,KAAK,WACLC,GAAIhB,EACJiB,UAAQ,KAEd,iBAAK1B,UAAWC,EAAhB,WACI,mBAAQD,UAAWC,EAAYsB,KAAK,SAApC,qBACA,SAAC,KAAD,CAAMvB,UAAWC,EAAU0B,GAAG,IAA9B,UACJ,SAAC7B,EAAA,EAAD,CAAQyB,KAAK,SAAb,8BAKD,CC1Dc,SAASK,IACvB,OACC,+BACC,SAAC1B,EAAD,KAGF,C,wDCPM,IAkBIM,EAAS,eAACqB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACR,EAAIS,GAWvD,OARET,IAFFS,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/CommonComponents/Button/Button.module.css?02ca","components/CommonComponents/Button/Button.jsx","webpack://goit-react-hw-08-phonebook/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__DKOwf\"};","import css from './Button.module.css';\n\nexport default function Button ({children}) {\n\treturn <button className={css.button}>{children}</button>;\n };","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"LoginForm_box__eEt8j\",\"formBox\":\"LoginForm_formBox__rqVK0\",\"title\":\"LoginForm_title__5FilZ\",\"label\":\"LoginForm_label__F7sLE\",\"input\":\"LoginForm_input__aQRtt\",\"buttonBox\":\"LoginForm_buttonBox__aZRh7\",\"link\":\"LoginForm_link__IJw1a\",\"button\":\"LoginForm_button__LodJg\"};","import css from './LoginForm.module.css';\nimport { nanoid } from 'nanoid';\nimport Button from 'components/CommonComponents/Button';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { Link } from 'react-router-dom';\nimport {useAuth} from 'hooks/useAuth';\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const {isLoggedIn} = useAuth;\n\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\t const form = e.currentTarget;\n\tdispatch(logIn({ \n\t\temail: form.elements.email.value, \n\t\tpassword: form.elements.password.value,  \n\t}));\n\tif (isLoggedIn) {\n\t\t\tform.reset();\n\t }\n  };\n\n  return (\n\t<div className={css.box}>\n    <form onSubmit={handleSubmit} autoComplete=\"off\" className={css.formBox}>\n\t\t<h2 className={css.title}>Login</h2>\n      <label className={css.label} htmlFor={emailInputId}>\n        Email\n      </label>\n      <input\n        className={css.input}\n        type=\"email\"\n        name=\"email\"\n        id={emailInputId}\n        required\n      />\n\n      <label className={css.label} htmlFor={passwordInputId}>\n        Password\n      </label>\n      <input\n        className={css.input}\n        type=\"password\"\n        name=\"password\"\n        id={passwordInputId}\n        required\n      />\n\t\t<div className={css.buttonBox}>\n      <button className={css.button} type=\"submit\">Log In</button>\n      <Link className={css.link} to=\"/\">\n\t\t<Button type=\"button\">Go Back</Button></Link>\n\t\t</div>\n    </form>\n\t</div>\n  );\n}\n","import LoginForm from 'components/LoginForm';\n\nexport default function Login() {\n\treturn (\n\t\t<>\n\t\t\t<LoginForm/>\n\t\t</>\n\t)\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Button","children","className","css","LoginForm","dispatch","useDispatch","isLoggedIn","useAuth","emailInputId","nanoid","passwordInputId","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","htmlFor","type","name","id","required","to","Login","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}